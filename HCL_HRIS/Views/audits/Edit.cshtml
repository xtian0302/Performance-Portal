@model HCL_HRIS.Models.audit

@{
    ViewBag.Title = "Audit Management - Edit Audit";
}
<div class="row">
    <div class="col-6">
        <h2>Edit Audit</h2>
    </div>
    <div class="col-6 ">
        <div class="float-right">
            @Html.ActionLink("Manage Audits", "Index")
        </div>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>audit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.audit_id)

        <div class="form-group">
            @Html.LabelFor(model => model.case_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.case_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.case_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.audit_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.audit_type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.audit_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type_of_monitoring, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type_of_monitoring, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type_of_monitoring, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.auditor_sap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.auditor_sap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.auditor_sap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.agent_sap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.agent_sap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.agent_sap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.audit_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.audit_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.audit_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.transaction_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.transaction_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.transaction_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.bc, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.bc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.bc, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-5">
                @Html.LabelFor(model => model.euc, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.euc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.euc, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-5">
                @Html.LabelFor(model => model.cc, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.cc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cc, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group  col-5">
                @Html.LabelFor(model => model.fatal, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.fatal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fatal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Audit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
$(document).ready(function () {
    $("#auditor_sap,#agent_sap").autocomplete({
        minLength: 0,
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetUsers", "groups")',
                success: function (data) {
                    response($.map(data, function (val, item) {
                        return {
                            label:  val.name + " - " + val.sap_id,
                            value: val.sap_id
                        }
                    }))
                }
            })
        }
    }).focus(function() {
        $(this).autocomplete('search', $(this).val())
    });
    var audit_types = ["SLA","NSLA","MIP" ];
    $("#audit_type").autocomplete({
        minLength: 0,
        source: audit_types
    }).focus(function() {
        $(this).autocomplete('search', $(this).val())
    });
    var type_of_monitoring = ["Recorded Monitoring","Side by Side Monitoring" ];
    $("#type_of_monitoring").autocomplete({
        minLength: 0,
        source: type_of_monitoring
    }).focus(function() {
        $(this).autocomplete('search', $(this).val())
    });
});
</script>